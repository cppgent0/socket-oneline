#! /bin/bash

OVERALLRC=0

# set to the output directory

# --------------------
function main_setup() {
  source set_env.sh
  source $pybin/activate

  CW_DIR="$(pwd)"
  OUT_DIR="${CW_DIR}/out"
  mkdir -p "${OUT_DIR}"

  # initialize the output file
  OUTFILE="${OUT_DIR}/socket-oneline.txt"
  echo | tee "${OUTFILE}"
}

# --------------------
# run setup
# sets OVERALLRC to the return code
function run_setup() {
  PYTHONPATH=$PYTHONPATH:"${CWDIR}"/lib
  rm -rf out/iuv
  mkdir -p out/iuv

  rm -rf out/ver0
  mkdir -p out/ver0
  rm -rf out/ver1
  mkdir -p out/ver1

  rm -rf out/coverage
  mkdir -p out/coverage
  rm -f .coverage
}

# --------------------
# run setup
# sets OVERALLRC to the return code
function pip_setup() {
  # install latest socket-oneline
  python -m pip uninstall -y socket-oneline
  python -m pip install socket-oneline
}

# --------------------
# run the unit tests for named modules
# sets OVERALLRC to the return code
function run_verification() {
  echo "==== running verification tests: ${tag}" | tee -a "${OUTFILE}"
  # --cov-report=  : no std out
  # --cov-branch   : gather branch data
  # --cov-config=setup.cfg   : use the given cfg file
  # --cov-append   : append to the coverage data
  COV_OPTS="--cov-report= --cov-branch --cov-config=setup.cfg --cov-append"
  #UT_OPTS="--junit-xml="${OUT_DIR}"/ut_result.xml --durations=10"

  pytest ${UT_OPTS} ${COV_SRC} ${COV_OPTS} --iuvmode ${modules} | tee -a "${OUTFILE}"
  RC=${PIPESTATUS[0]}
  OVERALLRC=$((OVERALLRC + RC))
  echo "     ut RC=$RC" | tee -a "${OUTFILE}"
}

# --------------------
# run report
# sets OVERALLRC to the return code
function run_report() {
  echo "==== running report: ${tag}" | tee -a "${OUTFILE}"
  # --cov-report=  : no std out
  # --cov-branch   : gather branch data
  # --cov-config=setup.cfg   : use the given cfg file
  # --cov-append   : append to the coverage data
  COV_OPTS="--cov-report= --cov-branch --cov-config=setup.cfg --cov-append"
  rm -f out/ver/*.pdf
  modules=iuv/test_iuv_report.py
  pytest ${UT_OPTS} ${COV_SRC} ${COV_OPTS} --iuvmode ${modules} | tee -a "${OUTFILE}"
}

# --------------------
# run the coverage for the named includes
# sets OVERALLRC to the return code
function run_coverage() {
  echo "==== running coverage report: ${tag}" | tee -a "${OUTFILE}"
  coverage html --rcfile setup.cfg >>"${OUTFILE}"
  RC=${PIPESTATUS[0]}
  OVERALLRC=$((OVERALLRC + RC))
  echo "     coverage RC=$RC" | tee -a "${OUTFILE}"
}

# ---- Main

main_setup

tag=iuv
modules=""
# must be first
modules+="iuv/test_xx.py "

COV_SRC="--cov=socket_oneline/lib"

# run IUV tests
run_setup
#pip_setup
run_verification
run_report
run_coverage
echo "     overall rc $OVERALLRC : ${tag}" | tee -a "${OUTFILE}"

exit $OVERALLRC
